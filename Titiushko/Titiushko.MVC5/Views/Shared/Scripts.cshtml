var BASE_URL = "@(Request.Url.Scheme + "://" + Request.Url.Authority + Request.ApplicationPath.TrimEnd('/') + "/")";

if ("@TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_ERROR]".isTrue()) {
    Titiushko.MyMessage.error(@Html.Raw(Json.Encode(TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_ERROR_MESSAGE])));
}
if ("@TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_SUCCESS]".isTrue()) {
    Titiushko.MyMessage.success(@Html.Raw(Json.Encode(TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_SUCCESS_MESSAGE])));
}
if ("@TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_POPUP]".isTrue()) {
    var title = @Html.Raw(Json.Encode(TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_POPUP_TITLE]));
    Titiushko.MyAlertify.alert({
        title: title == null || title == "" ? "<i class='fa fa-times-circle text-danger'></i> Access Denied" : title,
        content: @Html.Raw(Json.Encode(TempData[Titiushko.MVC.Utils.Constants.Basic.TEMP_DATA_POPUP_MESSAGE])),
    });
}

Titiushko.Constants.TypeError = JSON.parse(@Html.Raw(Json.Encode(Titiushko.Utilities.Helpers.GlobalHelper.GetTypeErrorToJson())));